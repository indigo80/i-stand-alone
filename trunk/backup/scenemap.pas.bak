unit scenemap;

{$mode objfpc}{$H+}

interface

uses
  Classes,
  zgl_sprite_2d,
  zgl_primitives_2d,
  zgl_font,
  zgl_text,
  zgl_math_2d,
  zgl_utils,
  zgl_keyboard,
  zglSpriteEngine,
  zgl_mouse,
  SysUtils,
  math,
  player,
  sprite,
  basescene;



type

  { TSceneMap }

  TSceneMap = class(TBaseScene)
    player: TPlayer;
  public
    procedure Init; override;
    procedure Main; override;
    procedure Draw; override;
    procedure Dispose; override;
    procedure KeyboardInput; override;
    procedure MouseInput; override;
  end;

implementation

uses
  engine;

{ TSceneMap }

procedure TSceneMap.Init;
begin
  player.Create(SpriteEngine, 0);
  Main;
end;

procedure TSceneMap.Main;
begin
  Freeze := False;
end;

procedure TSceneMap.Draw;
begin
 SpriteEngine.Draw;
end;

procedure TSceneMap.Dispose;
begin

end;

procedure TSceneMap.KeyboardInput;
begin
  if key_Down(K_UP) Then player.MoveForward();
  if key_Down(K_DOWN) Then player.MoveBackwards();
  if key_Down(K_LEFT) Then player.MoveLeft();
  if key_Down(K_RIGHT) Then player.MoveRight();
  key_ClearState();
end;

procedure TSceneMap.MouseInput;
begin
  player.SetAngle(mouseX, mouseY);
  player.SetCrosshair();
end;

end.

